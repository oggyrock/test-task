{"version":3,"sources":["App.js","index.js"],"names":["App","useState","peopleList","setPeopleList","nameFilter","setNameFilter","lastnameFilter","setLastnameFilter","ageFilter","setAgeFilter","maleFilter","setMaleFilter","femaleFilter","setFemaleFilter","useEffect","fetch","then","response","json","data","filteredList","filter","person","name","includes","lastname","age","sex","className","type","placeholder","value","onChange","target","checked","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAiFeA,MA9Ef,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,OAG+BJ,mBAAS,IAHxC,mBAGNK,EAHM,KAGUC,EAHV,OAIqBN,mBAAS,IAJ9B,mBAINO,EAJM,KAIKC,EAJL,OAKuBR,oBAAS,GALhC,mBAKNS,EALM,KAKMC,EALN,OAM2BV,oBAAS,GANpC,mBAMNW,EANM,KAMQC,EANR,KAQbC,qBAAU,WACRC,MAAM,uCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIhB,EAAcgB,QAC7B,IAEH,IAAMC,EAAelB,EAAWmB,QAAO,SAAAC,GAAM,OAC3CA,EAAOC,KAAKC,SAASpB,IAClBkB,EAAOG,SAASD,SAASlB,KACxBgB,EAAOI,OAASlB,GAA2B,KAAdA,KAC7Bc,EAAOK,OAASjB,GAAc,MAC7BY,EAAOK,OAASf,GAAgB,SAGvC,OACE,sBAAKgB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,wCACE,sBAAKA,UAAU,YAAf,UACE,uBACEC,KAAK,OACLD,UAAU,QACVE,YAAY,qBACZC,MAAO3B,EACP4B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB5B,EAAc4B,EAAOF,UAEjD,uBACEF,KAAK,OACLD,UAAU,QACVE,YAAY,6CACZC,MAAOzB,EACP0B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB1B,EAAkB0B,EAAOF,UAErD,uBACEF,KAAK,OACLD,UAAU,QACVE,YAAY,6CACZC,MAAOvB,EACPwB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBxB,EAAawB,EAAOF,UAEhD,sBAAKH,UAAU,aAAf,UACE,kCACE,uBACEC,KAAK,WACLK,QAASxB,EACTsB,SAAU,kBAAMrB,GAAeD,MAJnC,gDAQA,kCACE,uBACEmB,KAAK,WACLK,QAAStB,EACToB,SAAU,kBAAMnB,GAAiBD,MAJrC,sDAULQ,EAAae,KAAI,SAAAb,GAAM,OACtB,sBAA2BM,UAAU,SAArC,UACE,sBAAMA,UAAU,OAAhB,SAAwBN,EAAOC,OAC/B,sBAAMK,UAAU,WAAhB,SAA4BN,EAAOG,WACnC,sBAAMG,UAAU,MAAhB,SAAuBN,EAAOI,MAC9B,sBAAME,UAAU,MAAhB,SAAsC,MAAfN,EAAOK,IAAa,6CAAW,iDAJ9CL,EAAOG,iBCjEzBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c9a6f363.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [peopleList, setPeopleList] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [lastnameFilter, setLastnameFilter] = useState('');\n  const [ageFilter, setAgeFilter] = useState('');\n  const [maleFilter, setMaleFilter] = useState(true);\n  const [femaleFilter, setFemaleFilter] = useState(true);\n\n  useEffect(() => {\n    fetch('https://venbest-test.herokuapp.com/')\n      .then(response => response.json())\n      .then(data => setPeopleList(data))\n  }, []);\n\n  const filteredList = peopleList.filter(person => (\n    person.name.includes(nameFilter)\n    && person.lastname.includes(lastnameFilter)\n    && (person.age === +ageFilter || ageFilter === '')\n    && (person.sex === (maleFilter && 'm')\n      || person.sex === (femaleFilter && 'f'))\n  ))\n\n  return (\n    <div className=\"App\">\n      <h2 className=\"title\">Filter for people from API</h2>\n        <div className=\"filterbox\">\n          <input\n            type=\"text\"\n            className='input'\n            placeholder=\"Имя\"\n            value={nameFilter}\n            onChange={({ target }) => setNameFilter(target.value)}\n          />\n          <input\n            type=\"text\"\n            className='input'\n            placeholder=\"Фамилия\"\n            value={lastnameFilter}\n            onChange={({ target }) => setLastnameFilter(target.value)}\n          />\n          <input\n            type=\"text\"\n            className='input'\n            placeholder=\"Возраст\"\n            value={ageFilter}\n            onChange={({ target }) => setAgeFilter(target.value)}\n          />\n          <div className=\"checkboxes\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={maleFilter}\n                onChange={() => setMaleFilter(!maleFilter)}\n              />\n              Мужчина\n            </label>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={femaleFilter}\n                onChange={() => setFemaleFilter(!femaleFilter)}\n              />\n              Женщина\n            </label>\n          </div>\n        </div>\n      {filteredList.map(person => (\n        <div key={person.lastname} className=\"person\">\n          <span className=\"name\">{person.name}</span>\n          <span className=\"lastname\">{person.lastname}</span>\n          <span className=\"age\">{person.age}</span>\n          <span className=\"sex\">{person.sex === 'm'? 'Мужчина': 'Женщина'}</span>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}